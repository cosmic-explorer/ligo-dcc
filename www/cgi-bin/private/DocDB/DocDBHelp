#! /usr/bin/env perl
#
# Description: Usually called as a pop-up, this looks up in docdb.hlp
#              the information on a specific topic. 
#
#      Author: Eric Vaandering (ewv@fnal.gov)
#    Modified: 

# Copyright 2001-2007 Eric Vaandering, Lynn Garren, Adam Bryant

#    This file is part of DocDB.

#    DocDB is free software; you can redistribute it and/or modify
#    it under the terms of version 2 of the GNU General Public License 
#    as published by the Free Software Foundation.

#    DocDB is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with DocDB; if not, write to the Free Software
#    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

use CGI;                                                                                      
use XML::Parser::PerlSAX;
use XML::PatAct::MatchName;
use XML::PatAct::ToObjects;
use XML::Grove::AsString;
use XML::Grove::AsCanonXML;

require "DocDBGlobals.pm";
require "HTMLUtilities.pm";

my $DefaultPatterns = [
  'helpfile'    => [ qw{ -holder                 } ],
  'entry'       => [ -make => Schema::Entry        ],
  'key'         => [ qw{ -field Key -as-string   } ],
  'title'       => [ qw{ -field Title -as-string } ],
  'text'        => [ qw{ -field Text -grove      } ],
];

my $ProjectPatterns = [
  'helpfile'    => [ qw{ -holder                 } ],
  'entry'       => [ -make => Schema::Entry, -args => 'Action => %{action}' ],
  'key'         => [ qw{ -field Key -as-string   } ],
  'title'       => [ qw{ -field Title -as-string } ],
  'text'        => [ qw{ -field Text -grove      } ],
];

if (-e "ProjectHelp.xml") {
  $ProjectHelp = 1;
}  

my $DefaultMatcher = XML::PatAct::MatchName -> new(Patterns => $DefaultPatterns);
my $DefaultHandler = XML::PatAct::ToObjects -> new(Patterns => $DefaultPatterns,
                                                    Matcher => $DefaultMatcher);
my $DefaultParser = XML::Parser::PerlSAX -> new(Handler => $DefaultHandler);
my $DefaultSchema = $DefaultParser -> parse(Source => {SystemId => "DocDBHelp.xml"  });

my ($ProjectMatcher,$ProjectHandler,$ProjectParser,$ProjectSchema);
if ($ProjectHelp) {
   $ProjectMatcher = XML::PatAct::MatchName -> new(Patterns => $ProjectPatterns);
   $ProjectHandler = XML::PatAct::ToObjects -> new(Patterns => $ProjectPatterns,
                                                   Matcher => $ProjectMatcher);
   $ProjectParser = XML::Parser::PerlSAX -> new(Handler => $ProjectHandler);
   $ProjectSchema = $ProjectParser -> parse(Source => {SystemId => "ProjectHelp.xml"});
}

# Start page

$query = new CGI;  
print $query -> header( -charset => $HTTP_ENCODING );
&DocDBHeader("$Project DocDB Help","",-nobody => $TRUE);

%params = $query -> Vars;
$helpterm = $params{term};   # Extract term user wants help for

# Parse XML into hashes, pull out desired text

@Array = @{$DefaultSchema};
foreach $Element (@Array) {
  if ($Element->{Key} eq $helpterm) {
    $DefaultText  = $Element->{Text}->as_canon_xml;
    $DefaultTitle = $Element->{Title};
    last;
  }
}

if ($ProjectHelp) {
  @Array = @{$ProjectSchema};
  foreach $Element (@Array) {
    if ($Element->{Key} eq $helpterm) {
      $Action       = $Element->{Action};
      $ProjectText  = $Element->{Text}->as_canon_xml;
      $ProjectTitle = $Element->{Title};
      last;
    }
  }
}

# Remove line breaks and XML element tags

$DefaultText =~ s/&#10;/ /g;
$ProjectText =~ s/&#10;/ /g;
$DefaultText =~ s/<text>//g;
$ProjectText =~ s/<text>//g;
$DefaultText =~ s/<\/text>//g;
$ProjectText =~ s/<\/text>//g;

# Print out help for user

if ($DefaultText || $ProjectText) {
  if ($Action eq "append" || !$Action) {
    print "<br><br><br>\n";
    print "<b><big>$DefaultTitle:</big></b><p>\n";
    print $DefaultText;
    print $ProjectText;
    print "\n";
  } elsif ($Action eq "prepend") {
    print "<b><big>$ProjectTitle:</big></b><p>\n";
    print $ProjectText;
    print $DefaultText;
    print "\n";
  } elsif ($Action eq "replace") {
    print "<b><big>$ProjectTitle:</big></b><p>\n";
    print $ProjectText;
    print "\n";
  }
} else {
  print "<b><big>No help available on this topic.</big></b><p>\n";
}  

&DocDBFooter($DBWebMasterEmail,$DBWebMasterName,-nobody => $TRUE);
